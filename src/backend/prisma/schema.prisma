generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Product {
  id          String @id @default(cuid())
  name        String
  description String
  category    CategoryEnum 
  price       Float  @db.Real

  Stock           Stock?
  MovementDetails MovementDetails[]

  @@map("product")
}

model Store {
  id      String @id @default(cuid())
  name    String
  address String

  Stock Stock?

  @@map("store")
}

model Stock {
  id String @id @default(cuid())

  Product   Product @relation(fields: [productId], references: [id])
  productId String  @unique @default("")

  Store   Store  @relation(fields: [storeId], references: [id])
  storeId String @unique @default("")

  quantity     Int
  minQuantity Int

  @@map("stock")
}

model Movement {
  id          String   @id @default(cuid())
  datetime    DateTime @default(now())
  observation String   @default("")

  MovementDetails   MovementDetails[]

  MovementType   MovementType @relation(fields: [movementTypeId], references: [id])
  movementTypeId String       @unique

  @@map("movement")
}

model MovementType {
  id           String           @id @default(cuid())
  movementtype MovementTypeEnum
  movementname MovementNameEnum
  cause        String

  Movement Movement[]

  @@map("movement_type")
}

model MovementDetails {
  id String @id @default(cuid())

  Product Product @relation(fields: [productId],references: [id])
  productId String @unique

  Movement Movement @relation(fields: [movementId],references: [id])
  movementId String @unique

  quantity Int

  @@map("movement_details")
}

enum CategoryEnum {
  IMPRESORA
  FILAMENTO
}

enum MovementTypeEnum {
  POSITIVE
  NEGATIVE
}

enum MovementNameEnum {
  REMITO
  FACTURA
  ORDEN_DE_COMPRA
  ORDEN_DE_PAGO
}

