generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Product {
  id          String       @id @default(cuid())
  name        String
  description String
  category    CategoryEnum
  price       Float        @db.Real

  Stock Stock[]

  @@map("product")
}

model Store {
  id      String @id @default(cuid())
  name    String
  address String

  Stock Stock[]

  @@map("store")
}

model Stock {
  id String @id @default(cuid())

  Product   Product @relation(fields: [productId], references: [id])
  productId String

  Store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  quantity    Int
  minQuantity Int

  MovementDetails MovementDetails[]

  @@map("stock")
}

model MovementDetails {
  id String @id @default(cuid())

  Stock   Stock  @relation(fields: [stockId], references: [id])
  stockId String

  Record   Record @relation(fields: [recordId], references: [id])
  recordId String

  quantity Int
  subtotal Float @db.Real

  @@map("movement_details")
}

model Record {
  id          String   @id @default(cuid())
  datetime    DateTime @default(now())
  observation String   @default("")
  senderName  String
  address     String

  MovementDetails MovementDetails[]

  recordType   RecordType @relation(fields: [recordTypeId], references: [id])
  recordTypeId String

  @@map("record")
}

model RecordType {
  id           String           @id @default(cuid())
  movementType MovementTypeEnum
  movementName MovementNameEnum
  cause        String

  Record Record[]

  @@map("record_type")
}

enum CategoryEnum {
  IMPRESORA
  FILAMENTO
}

enum MovementTypeEnum {
  POSITIVE
  NEGATIVE
}

enum MovementNameEnum {
  REMITO
  FACTURA
  ORDEN_DE_COMPRA
  ORDEN_DE_PAGO
}
