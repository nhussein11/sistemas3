generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Product {
  id          String       @id @default(cuid())
  name        String
  description String
  category    CategoryEnum
  price       Float        @db.Real

  Stock  Stock[]
  Course Course?

  @@map("product")
}

model Store {
  id      String @id @default(cuid())
  name    String
  address String

  Stock Stock[]

  @@map("store")
}

model Stock {
  id String @id @default(cuid())

  Product   Product @relation(fields: [productId], references: [id])
  productId String

  Store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  quantity    Int
  minQuantity Int

  RecordDetails RecordDetails[]

  @@map("stock")
}

model RecordDetails {
  id String @id @default(cuid())

  Stock   Stock  @relation(fields: [stockId], references: [id])
  stockId String

  Record   Record @relation(fields: [recordId], references: [id])
  recordId String

  quantity Int
  subtotal Float @db.Real

  @@map("record_details")
}

model Record {
  id          String   @id @default(cuid())
  datetime    DateTime @default(now())
  observation String   @default("")
  senderName  String
  address     String

  RecordDetails RecordDetails[]

  RecordType   RecordType @relation(fields: [recordTypeId], references: [id])
  recordTypeId String

  @@map("record")
}

model RecordType {
  id         String         @id @default(cuid())
  recordType RecordTypeEnum
  recordName RecordNameEnum
  cause      String

  Record Record[]

  @@map("record_type")
}

model Course {
  id   String @id @default(cuid())
  name String

  Enrollment Enrollment[]
  Product    Product      @relation(fields: [productId], references: [id])
  productId  String       @unique

  @@map("course")
}

model Student {
  id      String @id @default(cuid())
  name    String
  address String

  Enrollment Enrollment[]

  @@map("student")
}

model Enrollment {
  id           String @id @default(cuid())
  name         String
  academicYear Int

  Course   Course @relation(fields: [courseId], references: [id])
  courseId String

  Student   Student @relation(fields: [studentId], references: [id])
  studentId String

  @@map("enrollment")
}

enum CategoryEnum {
  IMPRESORA
  FILAMENTO
  COURSE
}

enum RecordTypeEnum {
  POSITIVE
  NEGATIVE
}

enum RecordNameEnum {
  REMITO
  FACTURA_ORIGINAL
  FACTURA_DUPLICADO
  ORDEN_DE_COMPRA
  ORDEN_DE_PAGO
}
